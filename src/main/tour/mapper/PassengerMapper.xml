<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main.tour.mapper.PassengerMapper">

    <select id="judgeIsExit" resultType="int" parameterType="string">
	select Count(*) from passenger where pid =#{pid}
    </select>
    <select id="judgeIsExitByUsername" resultType="int" parameterType="string">
	select Count(*) from passenger where username =#{username}
    </select>
    <select id="queryPassengerByPid" resultType="Passenger" parameterType="string">
SELECT pid, pname, pgender, iphone, rid, vid, id, state
	FROM public.passenger where (state = '待分配' or state = '申请退订' or state = '已分配')
	and pid = #{pid}


    </select>

    <select id="queryPassengers" resultType="Passenger">
        SELECT pid, pname, pgender, iphone, rid, vid, id, state
        FROM public.passenger
        <where>
            <if test="state !=null and state != null">
                state = '待分配' or state = '申请退订' or state = '已分配'
            </if>

        </where>
        order by pid
    </select>

    <select id="queryPassengerStateByUsername" resultType="string" parameterType="string">
        SELECT state
        FROM public.passenger where username = #{username}
    </select>


    <insert id="insertPassenger" parameterType="Passenger">
  INSERT INTO public.passenger(
	pid, pname, pgender, iphone, rid, vid, id, state)
	VALUES (#{pid}, #{pname}, #{pgender}, #{iphone}, #{rid}, #{vid}, #{id}, #{state})
    </insert>

    <insert id="insertPassenger2" parameterType="Passenger">
  INSERT INTO public.passenger(
	pid, pname, pgender, iphone, rid, vid, id, state,username)
	VALUES (#{pid}, #{pname}, #{pgender}, #{iphone}, #{rid}, #{vid}, #{id}, #{state},#{username})
    </insert>

    <delete id="deletePassengerByPid" parameterType="string">
        DELETE FROM public.passenger
        WHERE pid = #{pid}
    </delete>

    <update id="updatePassengerByPid" parameterType="Passenger">
        UPDATE public.passenger
        SET pid=#{pid}, pname=#{pname}, pgender=#{pgender}, iphone=#{iphone}, rid=#{rid}, vid=#{vid}, id=#{id}, state=#{state}
        WHERE pid = #{pid}
    </update>

    <update id="updatePassengerStateByUsername" parameterType="Passenger">
        UPDATE public.passenger

        SET state= #{state}
        WHERE username = #{username}
    </update>
    <!--    根据旅客查所在车辆id-->
    <!--    <select id="queryVidByPassenger" parameterType="string" resultType="string">-->
    <!--        select  p.vid from passenger p, Passenger v where v.pid = #{pid}-->
    <!--    </select>-->
    <!--    <resultMap id="pid_vid" type="Passenger">-->
    <!--        &lt;!&ndash;        作者的信息&ndash;&gt;-->
    <!--        <id property="pid" column="pid"/>-->
    <!--        <result property="pname" column="pname"/>-->
    <!--&lt;!&ndash;        <result property="pgender" column="pgender"/>&ndash;&gt;-->
    <!--&lt;!&ndash;        <result property="iphone" column="iphone"/>&ndash;&gt;-->
    <!--        <result property="rid" column="rid"/>-->
    <!--        <result property="vid" column="vid"/>-->
    <!--        <result property="id" column="id"/>-->
    <!--        &lt;!&ndash;        association标签:一对一映射；-->
    <!--        collections:一对多映射-->
    <!--        javaType：组成另一个类的类型（另一张表）-->
    <!--        blog：级联属性-->
    <!--        &ndash;&gt;-->
    <!--        <association property="Passenger" javaType="Passenger">-->
    <!--            <id property="vid" column="vid"/>-->
    <!--            <result property="bname" column="bname"/>-->
    <!--        </association>-->
    <!--    </resultMap>-->
    <!--    &lt;!&ndash;          select * from writer w inner join blog b-->
    <!--         on w.bid =b.bid-->
    <!--         where w.wid =#{wid}&ndash;&gt;-->
    <!--    <select id="queryVidByPassenger" parameterType="string" resultMap="pid_vid">-->
    <!--        select  p.vid from passenger p, Passenger v where v.pid = #{pid}-->
    <!--    </select>-->
</mapper>