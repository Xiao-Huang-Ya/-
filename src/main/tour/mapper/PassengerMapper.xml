<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main.tour.mapper.PassengerMapper">

    <select id="judgeIsExit" resultType="int" parameterType="string">
	select Count(*) from passenger where pid =#{pid}
    </select>
    <select id="judgeIsExitByUsername" resultType="int" parameterType="string">
	select Count(*) from passenger where username =#{username}
    </select>

    <select id="queryPassengerByPid" resultType="Passenger" parameterType="string">
    SELECT pid, pname, pgender, iphone, rid, vid, id, state
	FROM public.passenger where (state = '待分配' or state = '申请退订' or state = '已分配')
	and pid = #{pid}


    </select>
    <select id="queryPassengersOnlyWorked" resultType="Passenger" parameterType="string">
    SELECT pid, pname, pgender, iphone, rid, vid, id, state
	FROM public.passenger where state = '已报名'


    </select>

    <select id="queryVidByPid" resultType="Passenger" parameterType="string">
    SELECT  vid
	FROM public.passenger where pid = #{pid}

    </select>

    <select id="queryPassengers" resultType="Passenger">
        SELECT pid, pname, pgender, iphone, rid, vid, id, state
        FROM public.passenger
        <where>
            <if test="state !=null and state != null">
                state = '待分配' or state = '申请退订' or state = '已分配'
            </if>

        </where>
        order by pid
    </select>

    <select id="queryPassengerStateByUsername" resultType="string" parameterType="string">
        SELECT state
        FROM public.passenger where username = #{username}
    </select>

    <select id="queryRidByPid" resultType="string" parameterType="string">
        SELECT rid
        FROM public.passenger where pid = #{pid}
    </select>
    <insert id="insertPassenger" parameterType="Passenger">
  INSERT INTO public.passenger(
	pid, pname, pgender, iphone, rid, vid, id, state)
	VALUES (#{pid}, #{pname}, #{pgender}, #{iphone}, #{rid}, #{vid}, #{id}, #{state})
    </insert>

    <insert id="insertPassenger2" parameterType="Passenger">
  INSERT INTO public.passenger(
	pid, pname, pgender, iphone, rid, vid, id, state,username)
	VALUES (#{pid}, #{pname}, #{pgender}, #{iphone}, #{rid}, #{vid}, #{id}, #{state},#{username})
    </insert>

    <delete id="deletePassengerByPid" parameterType="string">
        DELETE FROM public.passenger
        WHERE pid = #{pid}
    </delete>

    <update id="updatePassengerByPid" parameterType="Passenger">
        UPDATE public.passenger
        SET pid=#{pid}, pname=#{pname}, pgender=#{pgender}, iphone=#{iphone}, rid=#{rid}, vid=#{vid}, id=#{id}, state=#{state}
        WHERE pid = #{pid}
    </update>

    <update id="updatePassengerVidByVid" parameterType="Passenger">
        UPDATE public.passenger
        SET vid=#{vid}
        WHERE pid = #{pid}
    </update>

    <update id="updatePassengerStateByUsername" parameterType="Passenger">
        UPDATE public.passenger
        SET state= #{state},rid = #{rid}
        WHERE username = #{username}
    </update>
    <update id="updatePassengerStateByPid" parameterType="Passenger">
        UPDATE public.passenger
        SET state=#{state}
        WHERE pid = #{pid}
    </update>
</mapper>